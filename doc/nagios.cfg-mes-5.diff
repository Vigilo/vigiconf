diff -Nru /etc/nagios.orig/nagios.cfg /etc/nagios/nagios.cfg
--- /etc/nagios.orig/nagios.cfg	2010-07-01 14:58:13.000000000 +0200
+++ /etc/nagios/nagios.cfg	2010-07-01 15:19:38.000000000 +0200
@@ -46,16 +46,23 @@
 #cfg_file=/etc/nagios/objects/printer.cfg
 
 # load configuration files on the fly
-cfg_dir=/etc/nagios/conf.d
+#cfg_dir=/etc/nagios/conf.d
 
 # You can also tell Nagios to process all config files (with a .cfg
 # extension) in a particular directory by using the cfg_dir
 # directive as shown below:
 
-cfg_dir=/etc/nagios/servers
-cfg_dir=/etc/nagios/printers
-cfg_dir=/etc/nagios/switches
-cfg_dir=/etc/nagios/routers
+#cfg_dir=/etc/nagios/servers
+#cfg_dir=/etc/nagios/printers
+#cfg_dir=/etc/nagios/switches
+#cfg_dir=/etc/nagios/routers
+
+# Vigilo specific file
+cfg_file=/etc/nagios/vigilo.cfg
+
+# Vigiconf-generated conf file
+cfg_file=/etc/vigilo/vigiconf/prod/nagios.cfg
+cfg_file=/etc/vigilo/vigiconf/prod/nagios-hls.cfg
 
 
 # OBJECT CACHE FILE
@@ -338,7 +345,7 @@
 # this value to 0.  If passive checks should be logged, set
 # this value to 1.
 
-log_passive_checks=1
+log_passive_checks=0
 
 
 
@@ -379,7 +386,7 @@
 # program start time that an initial check of all services should
 # be completed.  Default is 30 minutes.
 
-max_service_check_spread=30
+max_service_check_spread=5
 
 
 
@@ -440,7 +447,7 @@
 # This is the frequency (in seconds!) that Nagios will process
 # the results of host and service checks.
 
-check_result_reaper_frequency=10
+check_result_reaper_frequency=3
 
 
 
@@ -607,8 +614,8 @@
 # ocsp command, and performance data commands.  All values are in
 # seconds.
 
-service_check_timeout=60
-host_check_timeout=30
+service_check_timeout=30
+host_check_timeout=10
 event_handler_timeout=30
 notification_timeout=30
 ocsp_timeout=5
@@ -752,7 +759,7 @@
 # on what aggressive host check is or check out the source code in
 # base/checks.c
 
-use_aggressive_host_checking=0
+use_aggressive_host_checking=1
 
 
 
@@ -829,7 +836,7 @@
 # performance data.
 # Values: 1 = process performance data, 0 = do not process performance data
 
-process_performance_data=0
+process_performance_data=1
 
 
 
@@ -1013,7 +1020,7 @@
 # check the "freshness" of service check results.  If you have
 # disabled service freshness checking, this option has no effect.
 
-service_freshness_check_interval=60
+service_freshness_check_interval=10
 
 
 
@@ -1024,7 +1031,7 @@
 # manner.
 # Values: 1 = enabled freshness checking, 0 = disable freshness checking
 
-check_host_freshness=0
+check_host_freshness=1
 
 
 
@@ -1033,7 +1040,7 @@
 # check the "freshness" of host check results.  If you have
 # disabled host freshness checking, this option has no effect.
 
-host_freshness_check_interval=60
+host_freshness_check_interval=10
 
 
 
@@ -1060,7 +1067,7 @@
 # Values: 1 = enable flap detection
 #         0 = disable flap detection (default)
 
-enable_flap_detection=1
+enable_flap_detection=0
 
 
 
@@ -1085,7 +1092,7 @@
 #	strict-iso8601	(YYYY-MM-DDTHH:MM:SS)
 #
 
-date_format=us
+date_format=euro
 
 
 
diff -Nru /etc/nagios.orig/vigilo.cfg /etc/nagios/vigilo.cfg
--- /etc/nagios.orig/vigilo.cfg	1970-01-01 01:00:00.000000000 +0100
+++ /etc/nagios/vigilo.cfg	2010-07-01 16:24:09.000000000 +0200
@@ -0,0 +1,274 @@
+# confid:2
+############
+# COMMANDS #
+############
+
+define command{
+	command_name	host-notify-bus
+	command_line	/usr/bin/printf "%b" "event|$TIMET$|$HOSTNAME$|Host|$HOSTSTATE$|$HOSTOUTPUT$\\n" | socat -u - UNIX-CONNECT:/var/lib/vigilo/connector-nagios/send.sock
+}
+define command{
+	command_name	service-notify-bus
+	command_line	/usr/bin/printf "%b" "event|$TIMET$|$HOSTNAME$|$SERVICEDESC$|$SERVICESTATE$|$SERVICEOUTPUT$\\n" | socat -u - UNIX-CONNECT:/var/lib/vigilo/connector-nagios/send.sock
+}
+define command{
+	command_name	check_http_ars
+	command_line	$USER1$/check_http -H $HOSTADDRESS$ -u /arsys/shared/login.jsp 
+}
+define command{
+	command_name	check_dhcp_sudo
+	command_line	/usr/bin/sudo $USER1$/check_dhcp -s $HOSTADDRESS$
+}
+define command {
+	command_name	check_nrpe_rerouted
+	command_line	$USER1$/check_nrpe -H $ARG1$ -c $ARG2$ -a $ARG3$
+}
+define command {
+	command_name	check_nrpe_nossl
+	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$ -n -c $ARG1$ -a $ARG2$
+}
+define command {
+	command_name    check_nrpe_1arg_nossl
+	command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -n -c $ARG1$
+}
+define command {
+	command_name        check_nrpe_1arg_timeout
+	command_line        $USER1$/check_nrpe -t 15 -H $HOSTADDRESS$ -c $ARG1$
+}
+define command{
+	command_name    check_proxy_noauth
+	command_line    $USER1$/check_http -H $ARG2$ -I $HOSTADDRESS$ -p $ARG1$ -u http://$ARG2$
+}
+define command{
+	command_name    check_proxy_auth
+	command_line    $USER1$/check_http -H $ARG2$ -I $HOSTADDRESS$ -p $ARG1$ -u http://$ARG2$ -k "Proxy-Authorization: Basic login:passbase64encoded"
+}
+define command{
+	command_name    my_check_radius
+	command_line    $USER1$/check_radius -H $HOSTADDRESS$ -t 15 -P 1812 -F /etc/radiusclient/radiusclient.conf -u $ARG1$ -p $ARG2$
+}
+define command{
+	command_name    process-service-perfdata
+	command_line    $USER1$/perf2store -p /etc/vigilo/vigiconf/prod/perfdata/ -H '$HOSTNAME$' -s '$SERVICEDESC$' -a '$SERVICESTATE$' -t '$LASTSERVICECHECK$' -v '$SERVICEPERFDATA$'
+}
+define command{
+	command_name    process-host-perfdata
+	command_line    $USER1$/perf2store -p /etc/vigilo/vigiconf/prod/perfdata/ -H '$HOSTNAME$' -s 'HOST' -a '$HOSTSTATE$' -t '$LASTHOSTCHECK$' -v '$HOSTPERFDATA$'
+}
+define command{
+	command_name            Collector
+	command_line            $USER1$/Collector -H '$HOSTNAME$' 
+}
+define command{
+	command_name            check_dummy
+	command_line            $USER1$/check_dummy 0
+}
+define command{
+	command_name            check_ldap_v3
+	command_line            $USER1$/check_ldap -H $HOSTADDRESS$ -3 -b $ARG1$
+}
+define command{
+	command_name            check_sysUpTime_v2
+	#        command_line            $USER1$/check_snmp -P 2c -H $HOSTADDRESS$ -C $ARG1$ -c $ARG2$: -w $ARG3$: -o iso.3.6.1.2.1.1.3.0
+	command_line            $USER1$/check_sysuptime -v2 -C $ARG1$ -H $HOSTADDRESS$ -W $ARG3$ -T $ARG2$
+}
+define command{
+	command_name            check_sysUpTime_v3
+	#        command_line            $USER1$/check_snmp -P 3 -H $HOSTADDRESS$ -c $ARG1$: -w $ARG2$: -o iso.3.6.1.2.1.1.3.0 -L authNoPriv -U $ARG3$ -a MD5 -A $ARG4$
+	command_line            $USER1$/check_sysuptime -v3 -U $ARG3$ -A $ARG4$  -a MD5  -L authNoPriv -H $HOSTADDRESS$ -W $ARG2$ -T $ARG1$
+}
+
+
+############
+# CONTACTS #
+############
+
+define contact{
+	contact_name                    bus
+	alias                           Message Bus
+	service_notification_period     24x7
+	host_notification_period        24x7
+	service_notification_options    w,u,c,r
+	host_notification_options       d,r
+	service_notification_commands   service-notify-bus
+	host_notification_commands      host-notify-bus
+	email                           root@localhost
+}
+### HLS ###
+define contact{
+	contact_name                    bus-hls
+	alias                           Message Bus for HLS
+	service_notification_period     24x7
+	host_notification_period        24x7
+	service_notification_options    w,u,c,r
+	host_notification_options       n
+	service_notification_commands   service-notify-bus
+	host_notification_commands      host-notify-bus
+	email                           root@localhost
+}
+
+
+##################
+# CONTACT GROUPS #
+##################
+
+define contactgroup{
+    contactgroup_name       bots
+    alias                   Nagios Notification robots
+    members                 bus
+}
+### HLS ###
+define contactgroup{
+    contactgroup_name       bots-hls
+    alias                   Nagios Notification robots for HLS
+    members                 bus-hls
+}
+
+
+################
+# TIME PERIODS #
+################
+define timeperiod{
+	timeperiod_name 24x7
+	alias           24 Hours A Day, 7 Days A Week
+	sunday          00:00-24:00
+	monday          00:00-24:00
+	tuesday         00:00-24:00
+	wednesday       00:00-24:00
+	thursday        00:00-24:00
+	friday          00:00-24:00
+	saturday        00:00-24:00
+}
+define timeperiod{
+	timeperiod_name workhours
+	alias           Standard Work Hours
+	monday          09:00-17:00
+	tuesday         09:00-17:00
+	wednesday       09:00-17:00
+	thursday        09:00-17:00
+	friday          09:00-17:00
+}
+define timeperiod{
+	timeperiod_name nonworkhours
+	alias           Non-Work Hours
+	sunday          00:00-24:00
+	monday          00:00-09:00,17:00-24:00
+	tuesday         00:00-09:00,17:00-24:00
+	wednesday       00:00-09:00,17:00-24:00
+	thursday        00:00-09:00,17:00-24:00
+	friday          00:00-09:00,17:00-24:00
+	saturday        00:00-24:00
+}
+
+
+#############
+# TEMPLATES #
+#############
+
+define host{
+	name                            generic-active-host
+	active_checks_enabled           1
+	passive_checks_enabled          0
+	notifications_enabled           1       ; Host notifications are enabled
+	event_handler_enabled           0       ; Host event handler is enabled
+	flap_detection_enabled          1       ; Flap detection is enabled
+	failure_prediction_enabled      1       ; Failure prediction is enabled
+	process_perf_data               0       ; Process performance data
+	retain_status_information       1       ; Retain status information across program restarts
+	retain_nonstatus_information    1       ; Retain non-status information across program restarts
+	max_check_attempts              1
+	notification_interval           0
+	notification_period             24x7
+	notification_options            u,d,r,f
+	contact_groups                  bots
+	check_command                   check-host-alive
+	register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
+}
+define host{
+	use                             generic-active-host
+	name                            generic-passive-host
+	passive_checks_enabled          1
+	active_checks_enabled           0
+	register                        0
+}       
+define service{
+	name                            generic-active-service ; The 'name' of this service template
+	active_checks_enabled           1       ; Active service checks are enabled
+	passive_checks_enabled          0       ; Passive service checks are not accepted
+	parallelize_check               1       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
+	obsess_over_service             1       ; We should obsess over this service (if necessary)
+	check_freshness                 0       ; Default is to NOT check service 'freshness'
+	notifications_enabled           1       ; Service notifications are enabled
+	event_handler_enabled           1       ; Service event handler is enabled
+	flap_detection_enabled          1       ; Flap detection is enabled
+	failure_prediction_enabled      1       ; Failure prediction is enabled
+	process_perf_data               0       ; Process performance data
+	retain_status_information       1       ; Retain status information across program restarts
+	retain_nonstatus_information    1       ; Retain non-status information across program restarts
+	is_volatile                     0
+	check_period                    24x7
+	max_check_attempts              1
+	normal_check_interval           5 
+	retry_check_interval            1
+	contact_groups                  bots
+	notification_options            w,u,c,r,f
+	notification_interval           0
+	notification_period             24x7
+	register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
+}
+define service {
+	use                             generic-active-service
+	name                            generic-passive-service
+	check_command                   check_dummy
+	passive_checks_enabled          1       ; Passive service checks are enabled/accepted
+	active_checks_enabled           0       ; Active service checks are enabled
+	register                        0
+	notification_options            w,c,r,f
+}
+### HLS ###
+define host{
+	name                            generic-hls-host
+	active_checks_enabled           0
+	passive_checks_enabled          1
+	notifications_enabled           1       ; Host notifications are enabled
+	event_handler_enabled           0       ; Host event handler is enabled
+	flap_detection_enabled          1       ; Flap detection is enabled
+	failure_prediction_enabled      1       ; Failure prediction is enabled
+	process_perf_data               0       ; Process performance data
+	retain_status_information       1       ; Retain status information across program restarts
+	retain_nonstatus_information    1       ; Retain non-status information across program restarts
+	max_check_attempts              1
+	notification_interval           0
+	notification_period             24x7
+	notification_options            u,d,r,f
+	contact_groups                  bots-hls
+	check_command                   check_dummy
+	register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
+}
+define service{
+	name                            generic-hls-service ; The 'name' of this service template
+	active_checks_enabled           0       ; Active service checks are enabled
+	passive_checks_enabled          1       ; Passive service checks are not accepted
+	parallelize_check               1       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
+	obsess_over_service             1       ; We should obsess over this service (if necessary)
+	check_freshness                 0       ; Default is to NOT check service 'freshness'
+	notifications_enabled           1       ; Service notifications are enabled
+	event_handler_enabled           1       ; Service event handler is enabled
+	flap_detection_enabled          1       ; Flap detection is enabled
+	failure_prediction_enabled      1       ; Failure prediction is enabled
+	process_perf_data               0       ; Process performance data
+	retain_status_information       1       ; Retain status information across program restarts
+	retain_nonstatus_information    1       ; Retain non-status information across program restarts
+	is_volatile                     0
+	check_period                    24x7
+	max_check_attempts              1
+	normal_check_interval           5 
+	retry_check_interval            1
+	contact_groups                  bots-hls
+	notification_options            w,u,c,r,f
+	notification_interval           0
+	notification_period             24x7
+	check_command                   check_dummy
+	register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
+}
+
