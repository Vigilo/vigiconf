<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!--
# VIGILO_EXIG_VIGILO_CONFIGURATION_0010 : Fonctions de préparation des
#   configurations de la supervision en mode CLI
#
#   configuration des hôtes à superviser : ajout/modification/suppression
#     d'un hôte ou d'une liste d'hôtes
#   configuration des paramètres d'authentification SNMP pour chaque hôte à
#     superviser ( version V1,V2c,V3) et adresse IP pour l'interface SNMP
#   configuration des services et seuils d'alarmes :
#     ajout/modification/suppression d'un service et positionnement des seuils
#     d'alarme Warning/Critical/OK
#   configuration des valeurs de performances à collecter :
#     ajout/modification/suppression d'une valeur de performance
#   configuration des cartes automatiques;

# N°1.VIGILO_EXIG_VIGILO_CONFIGURATION_0030 : Interface programmatique de
#   configuration
#   mise à jour de la totalité de la configuration via l'interface programmatique
#     pour l'ensemble des configurations
-->

<!-- IP type (TODO: support IPv6, improve regexp) -->

<xs:simpleType name="IPType">
    <xs:restriction base="xs:string">
    <xs:pattern value="[0-9\.]+"/>
    </xs:restriction>
</xs:simpleType>

<xs:element name="nagios">
    <xs:complexType>
        <xs:sequence>
            <xs:element maxOccurs="3" minOccurs="0" name="directive">
                <xs:complexType>
                    <xs:attribute name="max_check_attempts" type="xs:integer"/>
                    <xs:attribute name="check_interval" type="xs:integer"/>
                    <xs:attribute name="retry_interval" type="xs:integer"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:element>

<!-- Element hosts
=================================================

hosts element contains one ore more host elements
=================================================
-->
<xs:element name="hosts">
    <xs:complexType>
        <xs:sequence>
            <!-- Element host -->    
            <xs:element maxOccurs="unbounded" minOccurs="1" name="host">
                <xs:complexType>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="template" type="xs:string"/>
                    <!-- nagios host specific bloc -->
                    <xs:element ref="nagios"/>
                    <xs:element name="class" type="xs:string"/>
                    <xs:element name="attribute">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:integer">
                                    <xs:attribute name="name" type="xs:string"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="test">
                        <xs:complexType>
                            <xs:choice maxOccurs="unbounded" minOccurs="0">
                                <xs:element name="arg">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="name" type="xs:string"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>

                                <!-- nagios service specific bloc -->
                                <xs:element ref="nagios"/>
                            </xs:choice>

                            <xs:attribute name="name" type="xs:string"/>
                            <xs:attribute name="weight" type="xs:positiveInteger"/>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="item" type="xs:string"/>
        
                    <xs:element name="tag">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute name="service" type="xs:string"/>
                                    <xs:attribute name="name" type="xs:string"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
        
                    <xs:element name="trap">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute name="service" type="xs:string"/>
                                    <xs:attribute name="key" type="xs:string"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
        
                    <xs:element name="group" type="xs:string"/>
                </xs:choice>

                <!--
                    Libellé de l'hôte.
                    Si cet attribut est omis, la valeur de l'attribut "address"
                    est automatiquement utilisée.
                -->
                <xs:attribute name="name" type="xs:string" use="optional"/>

                <!-- Adresse de l'hôte (IP ou FQDN). -->
                <xs:attribute name="address" type="xs:string" use="required"/>

                <!--
                    Groupe utilisé pour ventiler l'hôte.
                    Si cet attribut est omis, on tente de déterminer le groupe
                    qui va servir à la ventilation à partir des groupes rattachés
                    à l'hôte, à condition que les groupes ne se contredisent pas.
                -->
                <xs:attribute name="ventilation" type="xs:string" use="optional"/>

                <!-- Poids accordé à l'hôte (entier strictement positif). -->
                <xs:attribute name="weight" type="xs:positiveInteger"/>

                </xs:complexType>
            </xs:element>
            <!-- End Element host -->
        </xs:sequence>
    </xs:complexType>
</xs:element>

</xs:schema>
<!--
vim: ts=4 et
-->
